<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
	
	<!-- 扫描包 -->
	<context:component-scan base-package="com.wuspace.model"></context:component-scan>
	<context:component-scan base-package="com.wuspace.service"></context:component-scan>
	<context:component-scan base-package="com.wuspace.controller"></context:component-scan>

	<!--访问静态资源-->
	<!--<mvc:default-servlet-handler default-servlet-name="default"/>-->
	<!--<mvc:resources mapping="/css/**" location="/resources/css/"/>
	<mvc:resources mapping="/images/**" location="/resources/images/"/>
	<mvc:resources mapping="/js/**" location="/resources/js/"/>-->

	<!-- 引入数据库配置文件 -->
	<context:property-placeholder location="classpath:config/db.properties" />
		
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		
		<!-- 连接关闭时默认将所有未提交的操作回滚。Default: false -->  
        <!-- <property name="autoCommitOnClose" value="true" />  --> 
        <!-- 当连接池用完时客户端调用getConnection()后等待获取新连接的时间,超时后将抛出 SQLException,如设为0则无限期等待。单位毫秒。Default: 0-->   
        <!-- <property name="checkoutTimeout" value="${cpool.checkoutTimeout}" /> -->  
        <!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->  
        <!-- <property name="initialPoolSize" value="${cpool.minPoolSize}" />  --> 
        <!-- 连接池中保留的最小连接数 -->  
        <!-- <property name="minPoolSize" value="${cpool.minPoolSize}" />   -->
        <!-- 连接池中保留的最大连接数。Default: 15 -->  
        <!-- <property name="maxPoolSize" value="${cpool.maxPoolSize}" />   -->
        <!-- 最大空闲时间,36000秒(10小时)内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
        <!-- <property name="maxIdleTime" value="${cpool.maxIdleTime}" />   -->
        <!-- <property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}" /> -->  
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
        <!-- <property name="acquireIncrement" value="${cpool.acquireIncrement}" />   -->
        <!-- 定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->  
        <!-- <property name="acquireRetryAttempts" value="${cpool.acquireRetryAttempts}" />   -->
        <!-- 两次连接中间隔时间，单位毫秒。Default: 1000 -->  
        <!-- <property name="acquireRetryDelay" value="${cpool.acquireRetryDelay}" /> -->
	</bean>
	
	<bean id="persistenceProvider" class="org.hibernate.jpa.HibernatePersistenceProvider"></bean>
	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"></bean>
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL"></property>
	</bean>
	
	<!-- JPA的EntityManagerFactory的配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"></property>
		<property name="persistenceUnitName" value="blog"></property>
		
		<property name="persistenceProvider" ref="persistenceProvider"></property>
		<property name="jpaDialect" ref="jpaDialect"></property>
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"></property>
		
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置事务管理器 (SpringDataJPA)-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	
	<!-- 配置支持注解的事务(SpringDataJPA) -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 配置SpringData -->
	<jpa:repositories base-package="com.wuspace.model" entity-manager-factory-ref="entityManagerFactory"></jpa:repositories>
	
</beans>
