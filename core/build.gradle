group = 'web-project'
version = '1.0.0'
description = 'core'

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        //mavenCentral()
        maven { url "http://maven.aliyun.com/nexus/content/repositories/central/" }
        //jcenter()
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url 'http://repo.maven.apache.org/maven2' }
        maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
        maven { url 'https://oss.sonatype.org/content/repositories/releases' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    ext {
//        spring_boot_version = '1.5.9.RELEASE'
        spring_boot_version = '1.5.12.RELEASE'
    }
    dependencies {
        /**spring-boot-gradle-plugin 的作用：
         *
         * 简化执行和发布：它可以把所有 classpath 的类库构建成一个单独的可执行 jar 文件，这样可以简化你的执行和发布等操作。
         * 自动搜索入口文件：它会扫描 public static void main() 函数并且标记这个函数的宿主类为可执行入口。
         * 简化依赖：一个典型的 Spring 应用还是需要很多依赖类库的，想要配置正确这些依赖挺麻烦的，所以这个插件提供了内建的依赖解析器会自动匹配和当前 Spring Boot 版本匹配的依赖库版本。
         *
         * 不同版本的配置方式：https://plugins.gradle.org/plugin/org.springframework.boot/1.5.9.RELEASE
         */
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        /**
         * Provides additional optional and provided dependency configurations for Gradle along with Maven POM generation support.
         * https://github.com/spring-gradle-plugins/propdeps-plugin
         */
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
        /**
         * https://www.jianshu.com/p/3a81f0dd4418
         */
//        classpath "com.bmuschko:gradle-tomcat-plugin:2.2.3"
    }
}

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'java'
// http://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-gradle-plugin.html
apply plugin: 'org.springframework.boot'
//apply plugin: "io.spring.dependency-management"
//apply plugin: "com.bmuschko.tomcat"
//apply plugin: 'jetty'

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
}

idea {
    module {
        // 将生成路径src/main/generated也作为源码路径
        sourceDirs += file('src/main/generated/')
        generatedSourceDirs += file('src/main/generated/')
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    flatDir {
        dirs 'libs'
    }

    mavenLocal()

    //mavenCentral()
    maven { url "http://maven.aliyun.com/nexus/content/repositories/central/" }
    //jcenter()
    maven { url "http://maven.aliyun.com/nexus/content/repositories/jcenter/" }

//    maven { url "https://plugins.gradle.org/m2/" }
//    maven { url 'http://repo.spring.io/milestone' }
//    maven { url 'http://repo.spring.io/snapshot' }
//    maven { url 'http://repo.spring.io/plugins-release' }
//    maven { url 'http://repo.maven.apache.org/maven2' }
//    maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
//    maven { url 'https://oss.sonatype.org/content/repositories/releases' }
//    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext {
    mybatis_generator_version = '1.3.5'
    mybatis_spring_boot_starter_version = '1.3.1'
    mapper_spring_boot_starter_version = '1.1.4'
    pagehelper_spring_boot_starter_version = '1.2.1'

    hikaricp_version = '2.6.0'

//    poi_version = '3.9'
//    poi_ooxml_version = '3.9'
//    poi_ooxml_schemas_version = '3.17'

    itextpdf_version = '5.5.12'
    itext_asian_version = '5.2.0'

    pdfbox_version = '2.0.8'
    icepdf_core_version = '6.1.2'
    icepdf_viewer_version = '6.1.2'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Spring Boot
    compile "org.springframework.boot:spring-boot-devtools"
    compile "org.springframework.boot:spring-boot-starter-aop"
    compile "org.springframework.boot:spring-boot-starter-test"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-cache"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-data-redis"
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile("org.springframework.boot:spring-boot-starter-undertow")

    compile "org.springframework.boot:spring-boot-starter-websocket"
//    compile "org.springframework.boot:spring-boot-starter-amqp"

//    optional "org.springframework.boot:spring-boot-configuration-processor"

    // Swagger
//    compile("io.springfox:springfox-swagger2:${springfox_version}") {
//        exclude module: 'mapstruct'
//    }
//    compile "io.springfox:springfox-swagger-ui:${springfox_version}"

    // Spring Cloud
    //compile 'org.springframework.cloud:spring-cloud-starter-eureka'

    // Liquibase
    compile "org.liquibase:liquibase-core"

    // 数据库持久化
    compile "com.h2database:h2"
    compile "mysql:mysql-connector-java"
    // Caffeine
//    compile "com.github.ben-manes.caffeine:caffeine"
    // JetCache
    compile "com.alicp.jetcache:jetcache-starter-redis:${jetcache_starter_redis_version}"

    // Mybatis
//    compile "org.mybatis.generator:mybatis-generator-core:${mybatis_generator_version}"
    compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatis_spring_boot_starter_version}"
    // Mapper
    compile "tk.mybatis:mapper-spring-boot-starter:${mapper_spring_boot_starter_version}"
    // Pagehelper
    compile "com.github.pagehelper:pagehelper-spring-boot-starter:${pagehelper_spring_boot_starter_version}"

    // spring-boot-starter-data-jpa, hibernate-jcache, hibernate-java8 依赖中包含了该依赖
//    compile "org.hibernate:hibernate-core:${hibernate_version}"

    compile "org.hibernate:hibernate-jcache:${hibernate_version}"
    compile "org.hibernate:hibernate-search-engine:${hibernate_search_version}"

    // Hibernate 5.2 版本及以上自动支持 java8 日期，版本低了就加上 hibernate-java8 依赖
    // http://blog.csdn.net/mn960mn/article/details/53141366
    compile "org.hibernate:hibernate-java8:5.1.2.Final"

//    org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor
//    compile "org.hibernate:hibernate-jpamodelgen:5.1.0.Final"

    // Querydsl
    compile "com.querydsl:querydsl-jpa:4.1.4"
    compile "com.querydsl:querydsl-apt:4.1.4:jpa"

    compile("com.zaxxer:HikariCP:${hikaricp_version}") {
        exclude(module: 'tools')
    }

    // Jackson
    // https://github.com/FasterXML/jackson-modules-java8
    compile "com.fasterxml.jackson.core:jackson-annotations"
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner:2.8.8"
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:2.8.8"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.8.8"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.8"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-json-org:2.8.8"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hppc:2.8.8"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.8.8"

    compile "com.dyuproject.protostuff:protostuff-core:${protostuff_core_version}"
    compile "com.dyuproject.protostuff:protostuff-runtime:${protostuff_runtime_version}"

    compile "net.logstash.logback:logstash-logback-encoder:${logstash_logback_encoder_version}"

//    compile("net.logstash.logback:logstash-logback-encoder:${logstash_logback_encoder_version}") {
//        exclude(group: 'ch.qos.logback')
//    }
//    compile "ch.qos.logback:logback-core:${ch_qos_logback_version}"
//    compile "ch.qos.logback:logback-classic:${ch_qos_logback_version}"
//    compile "ch.qos.logback:logback-access:${ch_qos_logback_version}"

    // Apache Commons
    compile "org.apache.commons:commons-lang3:${commons_lang_version}"
    // 包含 commons-collections、commons-logging
    compile("commons-beanutils:commons-beanutils:${commons_beanutils_version}") {
        exclude(module: 'commons-logging')
    }
    compile "commons-logging:commons-logging:${commons_logging_version}"
    compile "commons-io:commons-io:${commons_io_version}"
    compile "commons-fileupload:commons-fileupload:${commons_fileupload_version}"
    // 正则表达式
    compile "org.apache.oro:com.springsource.org.apache.oro:2.0.8"

    // Apache POI
    compile "org.apache.poi:poi:${apache_poi_version}"
    compile "org.apache.poi:poi-ooxml:${apache_poi_ooxml_version}"
//    compile "org.apache.poi:poi-ooxml-schemas:${poi_ooxml_schemas_version}"

    compile("org.docx4j:docx4j:${docx4j_version}") {
        exclude(group: 'org.slf4j')
    }

    compile "com.itextpdf:itextpdf:${itextpdf_version}"
    compile "com.itextpdf:itext-asian:${itext_asian_version}"

    // maven { url "http://maven.aliyun.com/nexus/content/groups/public/" } module 会错误
    compile "org.icepdf.os:icepdf-core:${icepdf_core_version}"
    compile "org.icepdf.os:icepdf-viewer:${icepdf_viewer_version}"

    compile "org.hyperic:sigar:${sigar_version}"

    compile "org.projectlombok:lombok:${lombok_version}"

    testCompile group: 'junit', name: 'junit', version: '4.12'


}

compileJava.dependsOn(processResources)
