group = 'web-project'
version = '1.0.0'
description = 'news'

buildscript {
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        jcenter()
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
        maven { url 'https://oss.sonatype.org/content/repositories/releases' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'http://repo.maven.apache.org/maven2' }
    }
    ext {
        spring_boot_version = '1.5.9.RELEASE'
    }
    dependencies {
        /**spring-boot-gradle-plugin 的作用：
         *
         * 简化执行和发布：它可以把所有classpath的类库构建成一个单独的可执行jar文件，这样可以简化你的执行和发布等操作。
         * 自动搜索入口文件：它会扫描 public static void main() 函数并且标记这个函数的宿主类为可执行入口。
         * 简化依赖：一个典型的Spring应用还是需要很多依赖类库的，想要配置正确这些依赖挺麻烦的，所以这个插件提供了内建的依赖解析器会自动匹配和当前Spring Boot版本匹配的依赖库版本。
         */
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
//        classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
//        classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
//apply plugin: 'com.bmuschko.tomcat'
// http://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-gradle-plugin.html
apply plugin: 'org.springframework.boot'
//apply plugin: "io.spring.dependency-management"
//apply plugin: 'jetty'    // 使用 providedCompile

idea {
    module {
        // 将生成路径src/main/generated也作为源码路径
        sourceDirs += file('src/main/generated/')
        generatedSourceDirs += file('src/main/generated/')
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'news'
    version = '0.0.1-SNAPSHOT'
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    jcenter()
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://repo.maven.apache.org/maven2' }
}

// 解决 Spring Cloud 冲突
//dependencyManagement {
//    imports {
//        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.SR2'
//    }
//}

ext {

//    tomcat_version = '9.0.1'

    mybatis_generator_version = '1.3.5'
    mybatis_spring_boot_starter_version = '1.3.1'
    mapper_spring_boot_starter_version = '1.1.4'
    pagehelper_spring_boot_starter_version = '1.2.1'

    hikaricp_version = '2.6.0'

//    poi_version = '3.9'
//    poi_ooxml_version = '3.9'
//    poi_ooxml_schemas_version = '3.17'

    itextpdf_version = '5.5.12'
    itext_asian_version = '5.2.0'

    pdfbox_version = '2.0.8'
    icepdf_core_version = '6.1.2'
    icepdf_viewer_version = '6.1.2'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':core')

    // Thymeleaf 模板
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect"
    compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity4"

}